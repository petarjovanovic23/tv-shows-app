// Mocks generated by Mockito 5.1.0 from annotations
// in tv_shows/test/unit/write_review_provider_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i13;

import 'package:flutter/material.dart' as _i12;
import 'package:image_picker/image_picker.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:tv_shows/models/register_info.dart' as _i7;
import 'package:tv_shows/models/review.dart' as _i3;
import 'package:tv_shows/models/show.dart' as _i9;
import 'package:tv_shows/models/sign_in_info.dart' as _i8;
import 'package:tv_shows/models/user.dart' as _i2;
import 'package:tv_shows/providers/request_state.dart' as _i4;
import 'package:tv_shows/providers/review_provider.dart' as _i11;
import 'package:tv_shows/repository/networking_repository.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeUser_0 extends _i1.Fake implements _i2.User {}

class _FakeReview_1 extends _i1.Fake implements _i3.Review {}

class _FakeRequestState_2<Value, Error extends Exception> extends _i1.Fake
    implements _i4.RequestState<Value, Error> {}

/// A class which mocks [NetworkingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkingRepository extends _i1.Mock
    implements _i5.NetworkingRepository {
  MockNetworkingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<_i2.User> registerUser(_i7.RegisterInfo? registerInfo) =>
      (super.noSuchMethod(Invocation.method(#registerUser, [registerInfo]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i6.Future<_i2.User>);
  @override
  _i6.Future<_i2.User> loginUser(_i8.SignInInfo? loginInfo) =>
      (super.noSuchMethod(Invocation.method(#loginUser, [loginInfo]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i6.Future<_i2.User>);
  @override
  _i6.Future<List<_i9.Show>> fetchShows() =>
      (super.noSuchMethod(Invocation.method(#fetchShows, []),
              returnValue: Future<List<_i9.Show>>.value(<_i9.Show>[]))
          as _i6.Future<List<_i9.Show>>);
  @override
  _i6.Future<List<_i3.Review>> fetchReviews(_i9.Show? show) =>
      (super.noSuchMethod(Invocation.method(#fetchReviews, [show]),
              returnValue: Future<List<_i3.Review>>.value(<_i3.Review>[]))
          as _i6.Future<List<_i3.Review>>);
  @override
  _i6.Future<_i3.Review> addReview(_i3.Review? review) =>
      (super.noSuchMethod(Invocation.method(#addReview, [review]),
              returnValue: Future<_i3.Review>.value(_FakeReview_1()))
          as _i6.Future<_i3.Review>);
  @override
  _i6.Future<_i2.User> updateUserData(String? email, _i10.PickedFile? image) =>
      (super.noSuchMethod(Invocation.method(#updateUserData, [email, image]),
              returnValue: Future<_i2.User>.value(_FakeUser_0()))
          as _i6.Future<_i2.User>);
}

/// A class which mocks [ReviewProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockReviewProvider extends _i1.Mock implements _i11.ReviewProvider {
  MockReviewProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.RequestState<List<_i3.Review>, Exception> get state =>
      (super.noSuchMethod(Invocation.getter(#state),
              returnValue: _FakeRequestState_2<List<_i3.Review>, Exception>())
          as _i4.RequestState<List<_i3.Review>, Exception>);
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  void fetchReviews() =>
      super.noSuchMethod(Invocation.method(#fetchReviews, []),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> executeRequest(
          {_i12.ValueGetter<_i6.Future<List<_i3.Review>>>? requestBuilder,
          Exception? Function(Exception)? errorHandler}) =>
      (super.noSuchMethod(
          Invocation.method(#executeRequest, [],
              {#requestBuilder: requestBuilder, #errorHandler: errorHandler}),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void dispose() => super.noSuchMethod(Invocation.method(#dispose, []),
      returnValueForMissingStub: null);
  @override
  void reset() => super.noSuchMethod(Invocation.method(#reset, []),
      returnValueForMissingStub: null);
  @override
  void addListener(_i13.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#addListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void removeListener(_i13.VoidCallback? listener) =>
      super.noSuchMethod(Invocation.method(#removeListener, [listener]),
          returnValueForMissingStub: null);
  @override
  void notifyListeners() =>
      super.noSuchMethod(Invocation.method(#notifyListeners, []),
          returnValueForMissingStub: null);
}

/// A class which mocks [Review].
///
/// See the documentation for Mockito's code generation for more information.
class MockReview extends _i1.Mock implements _i3.Review {
  MockReview() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set id(String? _id) => super.noSuchMethod(Invocation.setter(#id, _id),
      returnValueForMissingStub: null);
  @override
  String get comment =>
      (super.noSuchMethod(Invocation.getter(#comment), returnValue: '')
          as String);
  @override
  set comment(String? _comment) =>
      super.noSuchMethod(Invocation.setter(#comment, _comment),
          returnValueForMissingStub: null);
  @override
  int get rating =>
      (super.noSuchMethod(Invocation.getter(#rating), returnValue: 0) as int);
  @override
  set rating(int? _rating) =>
      super.noSuchMethod(Invocation.setter(#rating, _rating),
          returnValueForMissingStub: null);
  @override
  int get showId =>
      (super.noSuchMethod(Invocation.getter(#showId), returnValue: 0) as int);
  @override
  set showId(int? _showId) =>
      super.noSuchMethod(Invocation.setter(#showId, _showId),
          returnValueForMissingStub: null);
  @override
  set user(_i2.User? _user) =>
      super.noSuchMethod(Invocation.setter(#user, _user),
          returnValueForMissingStub: null);
  @override
  Map<String, dynamic> toJson() =>
      (super.noSuchMethod(Invocation.method(#toJson, []),
          returnValue: <String, dynamic>{}) as Map<String, dynamic>);
}
